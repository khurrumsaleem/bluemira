name: bluemira_ci

on:
  pull_request:
  push:
    branches:
      - develop
      - main

jobs:
  build-and-test:

    runs-on: ubuntu-latest

    # FreeCAD and click do not play nicely together, so make sure we're using the
    # environment variables that are set in the conda env (this is needed because
    # GitHub Actions run in their own shell so conda environment variables don't appear
    # to be picked up.
    env:
      LANG: 'C'
      LC_ALL: 'C'
      PYTHONIOENCODING: 'utf-8'

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Checkout bluemira-private-data
      uses: actions/checkout@v2
      with:
        repository: 'Fusion-Power-Plant-Framework/bluemira-private-data'
        ssh-key: ${{ secrets.BLUEMIRA_PRIVATE_DATA_DEPLOY_KEY }}
        path: './bluemira_private_data'

    - name: Cache pip
      uses: actions/cache@v2
      env:
        # Increase this value to reset cache if requirements.txt has not changed
        PIP_CACHE_NUMBER: 1
      with:
        path: ~/.cache/pip
        key:
          ${{ runner.os }}-pip-${{ env.PIP_CACHE_NUMBER }}-${{
          hashFiles('requirements.txt', 'requirements-develop.txt', 'setup.py') }}


    - name: Cache conda
      uses: actions/cache@v2
      env:
        # Increase this value to reset cache if conda/environment.yml has not changed
        CONDA_CACHE_NUMBER: 1
      with:
        path: ~/conda_pkgs_dir
        key:
          ${{ runner.os }}-conda-${{ env.CONDA_CACHE_NUMBER }}-${{
          hashFiles(
            'conda/environment.yml',
            'requirements.txt',
            'requirements-develop.txt',
            'setup.py'
          ) }}

    - name: Install Environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: bluemira
        environment-file: conda/environment.yml
        miniforge-version: "latest"
        use-only-tar-bz2: true

    - name: Check Code Quality
      shell: bash -l {0}
      run: |
        flake8 --count
        black --check .

    - name: Build Documentation BLUEPRINT
      shell: bash -l {0}
      run: |
        sphinx-build -W documentation/BLUEPRINT/source documentation/BLUEPRINT/build

    - name: Build Documentation bluemira
      shell: bash -l {0}
      run: |
        sphinx-build -W documentation/source documentation/build

    - name: Run pytest BLUEPRINT
      shell: bash -l {0}
      run: |
        pytest --cov=BLUEPRINT --cov-report html:htmlcov_BLUEPRINT tests/BLUEPRINT --reactor

    - name: Run pytest bluemira
      shell: bash -l {0}
      run: |
        pytest --cov=bluemira --cov-report html:htmlcov_bluemira tests/bluemira
